{"version":3,"sources":["services/phonebook.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","newObject","post","put","id","delete","Filter","filter","handleChange","value","onChange","e","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","handleFormSubmit","onSubmit","type","Persons","persons","handleDelete","personsList","map","person","key","number","name","onClick","Notification","message","success","style","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","notif","setNotif","setSuccess","useEffect","phonebookService","new_persons","toLowerCase","includes","target","event","preventDefault","duplicate","length","window","confirm","updatePerson","returnedPerson","setTimeout","concat","console","log","catch","error","updatedPersons","p","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.08987a03.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseURL);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseURL, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (newObject) => {\n  const request = axios.put(`${baseURL}/${newObject.id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseURL}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, remove };\n","import React from 'react';\n\nconst Filter = ({ filter, handleChange }) => {\n    return (\n        <form>\n            <div>\n            filter shown with <input value={filter} onChange={(e) => {handleChange(e)}} />\n            </div>\n        </form>\n    )\n}\n\nexport default Filter;","import React from 'react'\n\nconst PersonForm = ({ newName, newNumber, handleNameChange, handleNumberChange, handleFormSubmit }) => {\n    return (\n        <form onSubmit={(e) => handleFormSubmit(e)}>\n        <div>\n          name: <input value={newName} onChange={(e) => {handleNameChange(e)}} />\n          <br />\n          number: <input value={newNumber} onChange={(e) => {handleNumberChange(e)}} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, handleDelete }) => {\n    const personsList = persons.map(person => {\n        return (\n            <div key={person.number}>\n                {person.name} {person.number} \n                <button onClick={() => handleDelete(person)}>delete</button>\n            </div>\n        )\n    })\n    \n    return (\n        <div>\n            {personsList}\n        </div>\n    )\n}\n\nexport default Persons;","import React from 'react'\n\nconst Notification = ({ message, success }) => {\n    if (message === null) {\n        return null\n    }\n\n    else {\n        const style = success === true ? \"success\" : \"error\"\n\n        return (\n            <div className={style}>\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\n\nimport phonebookService from './services/phonebook'\nimport Filter from \"./components/Filter\"\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notif, setNotif ] = useState(null)\n  const [ success, setSuccess ] = useState(null)\n\n  useEffect(() => {\n    phonebookService.getAll()\n      .then(response => setPersons(response))\n  }, []);\n\n  // Create a copy of the persons array that can be filtered if a search term is inputted\n  let new_persons = [...persons]\n\n  if (filter) {\n    new_persons = new_persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())) \n  }\n\n  const handleFilterChange = (e) => setFilter(e.target.value)\n\n  const handleNameChange = (e) => setNewName(e.target.value)\n\n  const handleNumberChange = (e) => setNewNumber(e.target.value)\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault()\n\n    const duplicate = persons.filter(person => person.name === newName)\n\n    //console.log(\"DUP:\", duplicate)\n    if (duplicate.length) {\n      const choice = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n\n      if (choice === true) {\n        let updatePerson = duplicate[0]\n        updatePerson.number = newNumber\n        phonebookService.update(updatePerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== updatePerson.id ? person:  returnedPerson))\n\n            setNotif(`Updated ${returnedPerson.name}`)\n            setSuccess(true)\n  \n            setTimeout(() => {\n              setNotif(null)\n              setSuccess(null)\n            }, 5000)\n          })\n      }\n    }\n\n    else {\n      const newPerson = { \n        name: newName, \n        number: newNumber \n      }\n\n      phonebookService.create(newPerson)\n        .then(response => {\n          setPersons(persons.concat(response))\n          console.log(\"Added: \", response)\n          setNotif(`Added ${response.name}`)\n          setSuccess(true)\n\n          setTimeout(() => {\n            setNotif(null)\n            setSuccess(null)\n          }, 5000)\n        })\n\n      setNewName(\"\")\n      setNewNumber(\"\")\n    }\n  }\n\n  const handleDelete = (person) => {\n   const result = window.confirm(`Delete ${person.name}`)\n\n    if (result === true) {\n      phonebookService.remove(person.id)\n        .then(response => console.log(\"DELETED\", person))\n        .catch(error => {\n          setNotif(`Information of ${person.name} has already been removed from the server`)\n          setSuccess(false)\n\n          setTimeout(() => {\n            setNotif(null)\n            setSuccess(null)\n          }, 5000)\n        })\n\n      const updatedPersons = persons.filter(p => p.id !== person.id)\n      setPersons(updatedPersons)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notif} success={success}/>\n\n      <Filter filter={filter} handleChange={handleFilterChange} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleFormSubmit={handleFormSubmit}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={new_persons} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}